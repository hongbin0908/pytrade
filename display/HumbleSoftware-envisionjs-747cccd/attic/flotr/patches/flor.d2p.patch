@@ -581,25 +581,43 @@
     y.scale  = ph / (d2p(y.max, y.options) - d2p(y.min, y.options));
     y2.scale = ph / (d2p(y2.max, y2.options) - d2p(y2.min, y2.options));
 
-    x.d2p = x2.d2p = function(xval){
-      var o = this.options;
-      return (d2p(xval, o) - d2p(this.min, o)) * this.scale;
-    };
+    if (this.options.scaling === 'logarithmic') {
+        x.d2p = x2.d2p = function(xval){
+          var o = this.options;
+          return (d2p(xval, o) - d2p(this.min, o)) * this.scale;
+        };
 
-    x.p2d = this.axes.x2.p2d = function(xval){
-      var o = this.options;
-      return p2d(xval / this.scale + d2p(this.min, o), o);
-    };
+        x.p2d = this.axes.x2.p2d = function(xval){
+          var o = this.options;
+          return p2d(xval / this.scale + d2p(this.min, o), o);
+        };
 
-    y.d2p = y2.d2p = function(yval){
-      var o = this.options;
-      return ph - (d2p(yval, o) - d2p(this.min, o)) * this.scale;
-    };
+        y.d2p = y2.d2p = function(yval){
+          var o = this.options;
+          return ph - (d2p(yval, o) - d2p(this.min, o)) * this.scale;
+        };
 
-    y.p2d = y2.p2d = function(yval){
-      var o = this.options;
-      return p2d((ph - yval) / this.scale + d2p(this.min, o), o);
-    };
+        y.p2d = y2.p2d = function(yval){
+          var o = this.options;
+          return p2d((ph - yval) / this.scale + d2p(this.min, o), o);
+        };
+    } else {
+        x.d2p = x2.d2p = function(xval){
+          return (xval - this.min) * this.scale;
+        };
+
+        x.p2d = this.axes.x2.p2d = function(xval){
+          return xval / this.scale + this.min;
+        };
+
+        y.d2p = y2.d2p = function(yval){
+          return ph - (yval - this.min) * this.scale;
+        };
+
+        y.p2d = y2.p2d = function(yval){
+          return (ph - yval) / this.scale + this.min;
+        };
+    }
   },
   /**
    * Initializes the canvas and it's overlay canvas element. When the browser is IE, this makes use 
