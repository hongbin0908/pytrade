#! /usr/bin/env python2.7
# -*- coding: utf-8 -*-
# @author  Bin Hong

"""
"""

import sys
import os
import platform
import socket
import numpy as np
import pandas as pd

import matplotlib
matplotlib.use('Agg')

local_path = os.path.dirname(__file__)
root = os.path.join(local_path, '..')
sys.path.append(root)

from main.base.score2 import ScoreLabel
from main.work import model
from main.work import build
#from main.work import pred
from main import base
from main.work.conf import MltradeConf
from main.ta import ta_set
from main.model.spliter import YearSpliter
from main.model import ana
from main.classifier.tree import MyRandomForestClassifier
from main.classifier.tree import RFCv1n2000md6msl100
from main.classifier.tree import RFCv1n2000md6msl10000
from main.classifier.tree import MyGradientBoostingClassifier
from main.work.conf import MyConfStableLTa


if __name__ == '__main__':
    #confer = MyConfStableLTa(classifier = MyLogisticRegressClassifier(max_iter=100))
    confer = MyConfStableLTa()
    build.work(confer)
    model.work(confer)
    dfo = pd.read_pickle(confer.get_pred_file())
    df = dfo[(dfo.date >=confer.model_split.test_start) & (dfo.date<=confer.model_split.test_end)]
    df.to_pickle(os.path.join(root, 'output', "result_20170205.pkl"))
    df = pd.read_pickle(os.path.join(root, 'output', "result_20170205.pkl"))
    print(ana.roc_auc(df, confer))
    print(ana.roc_auc_per_year(df, confer))

    df = dfo.copy()
    df_sort = df.sort_values('pred', ascending=False)[["date", "sym", "open", "high", "low", "close", "pred"]]
    print(df_sort[df_sort.date == base.get_last_trade_date()].head())
